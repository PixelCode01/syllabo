name: Test Build

on:
  workflow_dispatch:
  pull_request:
    branches: [ main ]

jobs:
  test-build:
    name: Test Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyinstaller setuptools wheel

    - name: Install app dependencies (with error handling)
      run: |
        pip install -r requirements.txt || echo "Some dependencies failed to install, continuing..."

    - name: Create version file
      run: |
        echo "VERSION = 'test-build'" > src/version.py

    - name: Test PyInstaller spec file
      run: |
        echo "Testing PyInstaller with spec file..."
        pyinstaller --clean --noconfirm syllabo.spec || echo "Spec build failed, trying simple build..."

    - name: Test simple build (fallback)
      if: failure()
      run: |
        echo "Trying simple PyInstaller build..."
        pyinstaller --onefile --name syllabo-test --console main.py

    - name: Verify executable exists
      run: |
        echo "Checking for built executable..."
        ls -la dist/ || echo "No dist directory found"
        
    - name: Test executable (if exists)
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          if [ -f "dist/syllabo.exe" ]; then
            echo "Testing Windows executable..."
            dist/syllabo.exe --help || echo "Executable test failed"
          elif [ -f "dist/syllabo-test.exe" ]; then
            echo "Testing fallback Windows executable..."
            dist/syllabo-test.exe --help || echo "Executable test failed"
          fi
        else
          if [ -f "dist/syllabo" ]; then
            echo "Testing Unix executable..."
            ./dist/syllabo --help || echo "Executable test failed"
          elif [ -f "dist/syllabo-test" ]; then
            echo "Testing fallback Unix executable..."
            ./dist/syllabo-test --help || echo "Executable test failed"
          fi
        fi
      shell: bash

    - name: Upload test artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-build-${{ matrix.os }}
        path: |
          dist/
          build/
        retention-days: 1